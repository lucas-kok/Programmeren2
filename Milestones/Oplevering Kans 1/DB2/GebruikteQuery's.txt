--Query om een nieuw certificaat aan te maken aan de hand van een certificaat object

INSERT INTO Certificate VALUES 
(" + certificate.getRegisterID() + " 
, " + certificate.getScore() + "
, '" + certificate.getStaffName() + "')"


--Query om een nieuw certificaat te maken aan de hand van een studentEmail, CourseName, Score en Staffname

SELECT RegisterID 
FROM Register 
WHERE StudentEmail = '" + studentEmail + "' 
AND CourseName = '" + courseName + "'


--Query om alle certificaten op te halen en de studenten en courses waarvoor ze gehaald zijn

SELECT Certificate.*, Register.StudentEmail, Register.CourseName 
FROM Certificate 
INNER JOIN Register ON Register.RegisterID = Certificate.RegisterID


--Query om een certificaat te updaten aan de hand van een certificaat object en een nieuwe staffName en score

UPDATE Certificate 
SET StaffName = '" + staffName + "' 
, Score = " + score + " 
WHERE CertificateID = " + certificate.getCertificateID() + "


-- Query om een certificaat te verwijderen aan de hand van een certificaat object 

DELETE From Certificate
WHERE CertificateID = " + certificate.getCertificateID() + "


--Query om een contentItem toe te voegen aan een Cursus aan de hand van een Cursus object en een contentItem object

UPDATE ContentItem 
SET CourseName = '" + course.getName() + "' 
WHERE ContentID = '" + contentItem.getId() + "'


--Query om alle contentItems te krijgen die nog niet gebruikt worden voor een Cursus, gezien een contentItem maar in 1 cursus gebruikt mag worden

SELECT * 
FROM ContentItem 
WHERE CourseName IS NULL


--Query om een specifiek contentItem uit de database te krijgen aan de hand van een contentId

SELECT * 
FROM ContentItem 
WHERE ContentID = '" + id + "'


-Query om een Cursus aan te maken aan de hand van een Cursus object 

INSERT INTO Course VALUES (
'" + course.getName() + "'
,'" + course.getSubject() + "'
,'" + course.getIntroductionText() + "'
,'" + course.getLevel() + "')


--Query om een Cursus toe te voegen als een gesuggereerde cursus aan de hand van een cursus object

INSERT INTO RelatedCourses VALUES(
'" + course.getName() + "'
, '" + courseName.strip() + "')


--Query om alle Cursussen op te halen uit de database

SELECT * 
FROM Course


--Query om alle gesuggereerde cursussen op te halen voor een cursus object 

SELECT CourseTwoName 
FROM RelatedCourses 
WHERE CourseOneName = '" + course.getName() + "'


--Query om een Cursus te verwijderen aan de hand van een cursus object

DELETE FROM RelatedCourses 
WHERE CourseOneName = '" + course.getName() + "' 
	OR CourseTwoName = '" + course.getName() + "'

DELETE FROM Course 
WHERE Coursename = '" + course.getName() + "'


--Query om een Cursus te updaten aan de hand van een cursus object en als parameters de nieuwe waarden, 
hij verwijderd ook de oude geraleerde cursussen aan deze cursus, 
hij krijgt de nieuwe geralteerde cursussen mee en voegt die apart aan de nieuwe cursus toe met de eerder genoemde query

UPDATE RelatedCourses 
SET CourseTwoName = '" + name.strip() + "'
WHERE CourseTwoName = '" + selectedCourse.getName() + "'

UPDATE Course 
SET Coursename = '" + name.strip() + "'
, Subject = '" + subject + "'
, IntroductionText = '" + introductionText + "'
,Level = '" + level + "'
WHERE Coursename = '" + selectedCourse.getName() + "'

DELETE FROM RelatedCourses
WHERE CourseOneName = '" + name.strip() + "'


--Query om alle contentitems voor een cursus op te halen aan de hand van een cursus object

SELECT * 
FROM ContentItem 
WHERE CourseName = '" + course.getName() + "'


--Query om de gemiddelde voortgang te krijgen voor een contentItem aan de hand van een contentitem object

SELECT Progress 
FROM Viewing 
WHERE ContenID = " + contentItem.getId() 


--Query om het aantal certificaten dat behaalt is voor een cursus op te halen aan de hand van een cursus object

SELECT COUNT(CertificateID) as 'amount' 
FROM Certificate 
WHERE RegisterID IN (	SELECT RegisterID 
				FROM Register 
				WHERE CourseName = '" + course.getName() + "')


--Query om alle registraties op te halen 

SELECT * 
FROM Register


--Query om een nieuwe registratie te maken aan de hand van een studentEmail, courseName en inschrijfdatum

INSERT INTO Register values (
convert(datetime, '" + date + "', 103)
, '" + studentEmail + "'
, '" + courseName + "')


--Query om alle contentItems te krijgen voor een cursus aan de hand van een cursus object 

SELECT ContentID 
FROM ContentItem 
WHERE CourseName = '" + courseName + "'


--Query om alle ContentItems toe te voegen in de tabel Viewing, die de progress voor een student Email en contentitem bijhoud

INSERT INTO Viewing values (
'" + studentEmail + "'
, " + id + "
, 0)


--Query om een registratie te updaten aan de hand van een nieuwe inschrijfdatum en een registratie object 

UPDATE Register 
SET Registerdate = convert(datetime, '" + date + "', 103) 
WHERE RegisterID = " + registration.getRegisterID()

--Query om een registratie te verwijderen aan de hand van een registratie objecy, 
deze verwijdert ook de progress van de student voor de contentitems van deze cursus

DELETE FROM Register WHERE RegisterID = " + registration.getRegisterID() + " 
DELETE FROM Viewing WHERE StudentEmail = '" + registration.getStudentEmail() + "' 
AND ContenID IN (	SELECT ContenID 
			FROM ContentItem 
			WHERE CourseName = '" + registration.getCourseName() + "')


--Query om de progress op te halen voor een contentitem van een specifieke student

SELECT Progress 
FROM Viewing 
WHERE StudentEmail = '" + registration.getStudentEmail() + "' 
AND ContenID = " + contentItem.getId()


--Query om de progres voor een contentItem te updaten

UPDATE Viewing 
SET Progress = " + progress + " 
WHERE StudentEmail = '" + registration.getStudentEmail() + "' 
AND ContenID = " + contentItem.getId() + " 


--Query om het aantal Certificaten gehaald door een specifiek geslacht op te halen

SELECT COUNT(Certificate.RegisterID) as 'Certificates' 
FROM Certificate 
INNER JOIN Register ON Register.RegisterID = Certificate.RegisterID 
INNER JOIN Student ON Student.Email = Register.StudentEmail 
WHERE Student.Gender = '" + gender + "'


--Query om het aantal Registraties voor een specifiek geslacht op te halen

SELECT COUNT(Register.RegisterID) as 'Registrations' 
FROM Register 
INNER JOIN Student ON Student.Email = Register.StudentEmail 
WHERE Student.Gender = '" + gender + "'


--Query om de cursussen met de meest certificaten op te halen, je krijg met deze query ook de cursussen terug zonder certificaten
--Je krijgt alle cursussen en hoeveel certificaten er zijn gehaald in descending order

SELECT Course.CourseName, COUNT(CertificateID) 
FROM Course 
LEFT JOIN Register ON Register.CourseName = Course.Coursename 
LEFT JOIN Certificate ON Certificate.RegisterID = Register.RegisterID 
GROUP BY Course.Coursename 
ORDER BY COUNT(CertificateID) DESC


--Query om alle Webcasts met hun views op te halen
--Ze komen binnen in descending order, als er geen view zijn worden ze niet opgehaald

SELECT Title, COUNT(Progress) 
FROM ContentItem 
INNER JOIN Viewing ON ContentItem.ContentID = Viewing.ContenID 
WHERE Viewing.ContenID IN (	SELECT ContentID 
					FROM Webcast) 
AND Progress != 0
GROUP BY Title 
ORDER BY COUNT(StudentEmail)


--Query om een nieuwe Student aan te maken aan de hand van een student object

INSERT INTO Student VALUES (
'" + student.getEmail() + "'
, '" + student.getName() + "'
, convert(datetime, '" + student.getBirthdayAsString() + "', 103)
, '" + gender + "'
, '" + student.getAddress() + "'
, '" + student.getCity() + "'
, '" + student.getCountry() + "'
, '" + student.getPostalCode() + "'
)


--Query om alle studenten op te halen 

SELECT * 
FROM Student


--Query om een Student te updaten, de gegevens in de andere tabellen worden automatisch geupdate door de on update cascade.
--Meer hierover in de Onderbouwing voor de 3e normaalvorm

UPDATE Student 
SET Email = '" + newStudent.getEmail() + "'
, Name = '" + newStudent.getName() + "'
, Address = '" + newStudent.getAddress() + "'
, PostalCode = '" + newStudent.getPostalCode() + "'
, City = '" + newStudent.getCity() + "'
, Country = '" + newStudent.getCountry() + "'
, Gender = '" + gender + "'
, Birthday = (convert(datetime, '" + newStudent.getBirthdayAsString() + "', 103)) 
WHERE Email = '" + selectedStudent.getEmail() + "'


--Query om een Student te deleten aan de hand van student object, de gegevens in de andere tabellen worden automatisch verwijderd door de on delete cascade.
--Meer hierover in de Onderbouwing voor de 3e normaalvorm


DELETE FROM Student                   
WHERE Email = '" + selectedStudent.getEmail() + "'


--Query om alle registraties te krijgen voor een student object 

SELECT * 
FROM Register 
WHERE StudentEmail = '" + student.getEmail() + "'


--Query om alle certificaten voor een student object te krijgen
--Hij haalt ook de Naam van de Student en Cursus op waarvoor het certificaat is behaald

SELECT Certificate.*, Register.StudentEmail, Register.CourseName 
FROM Certificate 
INNER JOIN Register ON Register.RegisterID = Certificate.RegisterID 
WHERE StudentEmail = '" + student.getEmail() + "'


